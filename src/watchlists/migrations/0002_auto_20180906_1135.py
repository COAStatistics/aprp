# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2018-09-06 03:35
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('configs', '0006_month'),
        ('watchlists', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MonitorProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.FloatField(verbose_name='Price')),
                ('comparator', models.CharField(choices=[('__lt__', '<'), ('__lte__', '<='), ('__gt__', '>'), ('__gte__', '>=')], default='__lt__', max_length=6, verbose_name='Comparator')),
                ('color', models.CharField(choices=[('default', 'Default'), ('info', 'Info'), ('success', 'Success'), ('warning', 'Warning'), ('danger', 'Danger')], default='danger', max_length=20, verbose_name='Color')),
                ('info', models.TextField(blank=True, null=True, verbose_name='Info')),
                ('action', models.TextField(blank=True, null=True, verbose_name='Action')),
                ('period', models.TextField(blank=True, null=True, verbose_name='Period')),
                ('is_active', models.BooleanField(default=False, verbose_name='Is Active')),
                ('update_time', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
                ('months', models.ManyToManyField(to='configs.Month', verbose_name='Monitor Months')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configs.AbstractProduct', verbose_name='Product')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='configs.Type', verbose_name='Type')),
            ],
            options={
                'verbose_name_plural': 'Monitor Profile',
                'verbose_name': 'Monitor Profile',
            },
        ),
        migrations.AlterModelOptions(
            name='watchlist',
            options={'verbose_name': 'Watchlist', 'verbose_name_plural': 'Watchlists'},
        ),
        migrations.AlterModelOptions(
            name='watchlistitem',
            options={'verbose_name': 'Watchlist Item', 'verbose_name_plural': 'Watchlist Items'},
        ),
        migrations.RemoveField(
            model_name='watchlist',
            name='order',
        ),
        migrations.RemoveField(
            model_name='watchlistitem',
            name='price',
        ),
        migrations.AddField(
            model_name='watchlist',
            name='create_time',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='Updated'),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='end_date',
            field=models.DateField(blank=True, null=True, verbose_name='End Date'),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='is_default',
            field=models.BooleanField(default=False, verbose_name='Is Default'),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='start_date',
            field=models.DateField(blank=True, null=True, verbose_name='Start Date'),
        ),
        migrations.AddField(
            model_name='watchlist',
            name='watch_all',
            field=models.BooleanField(default=False, verbose_name='Watch All'),
        ),
        migrations.AlterField(
            model_name='watchlistitem',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='watchlists.Watchlist', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='monitorprofile',
            name='watchlist',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='watchlists.Watchlist', verbose_name='Watchlist'),
        ),
    ]
